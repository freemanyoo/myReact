{
"compilerOptions": {
"baseUrl": ".",
"paths": {
"@/*": ["src/*"]
}
},
"exclude": ["node_modules", "dist"]
}
//   이 파일은 Visual Studio Code와 같은 코드 에디터가 JavaScript 코드를 더 잘 이해하고 개발을 편리하게 할 수 있도록 도와주는 설정 파일입니다. 각 설정 항목의 의미는 다음과 같습니다.

//    1. `compilerOptions`: 컴파일러(정확히는 코드 분석기)가 코드를 어떻게 처리할지에 대한 옵션을 설정합니다.
//        * `baseUrl": "."`: 모듈(파일)을 가져올 때 기준이 되는 경로를 설정합니다. .은 프로젝트의 최상위 폴더를 의미합니다.
//        * `paths": { "@/*": ["src/*"] }`: 경로 별칭(alias)을 설정합니다. 이렇게 하면 import 구문에서 긴 상대 경로 대신 짧고 명확한 별칭을 사용할 수 있습니다.
//            * "@/*": @/로 시작하는 모든 경로를 의미합니다.
//            * ["src/*"]: @/를 src/로 대체하여 경로를 찾으라는 의미입니다. 예를 들어, import MyComponent from '@/components/MyComponent'는 실제로는 import MyComponent from 
//              'src/components/MyComponent'와 동일하게 동작합니다. 이렇게 하면 파일 구조가 복잡해져도 경로를 쉽게 관리할 수 있습니다.

//    2. `exclude`: 코드 분석에서 제외할 폴더를 지정합니다.
//        * "node_modules": 프로젝트의 의존성(라이브러리)들이 설치되는 폴더로, 분석할 필요가 없으므로 제외합니다.
//        * "dist": 프로젝트를 빌드했을 때 결과물이 생성되는 폴더로, 역시 분석 대상에서 제외합니다.

//   요약하자면, 이 jsconfig.json 파일은 코드 에디터에게 `@`를 `src` 폴더의 단축 경로로 사용하도록 알려주고, 불필요한 `node_modules`와 `dist` 폴더는 분석하지 않도록 설정하여 개발    
//   편의성을 높이는 역할을 합니다.